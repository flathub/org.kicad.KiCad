From c91a59641ea8cf02b386b5b996e9cb480e755d77 Mon Sep 17 00:00:00 2001
From: Paul Cornett <paulcor@users.noreply.github.com>
Date: Tue, 28 Nov 2023 08:36:46 -0800
Subject: [PATCH] Fix wxCheckBox undetermined state showing as checked with
 some themes

Simplify the code some and ensure that "inconsistent" and "active"
are not set at the same time.
See #24074

(backport of 175237119bae89644430b63a814d4f9c5a4c67e5)

*Modified to apply onto wxWidgets release version v3.2.4 by Johannes Maibaum
<jmaibaum@gmail.com>.*
---
 src/gtk/checkbox.cpp | 72 +++++++++++++++++---------------------------
 1 file changed, 28 insertions(+), 44 deletions(-)

diff --git a/src/gtk/checkbox.cpp b/src/gtk/checkbox.cpp
index 0579417ebc..8fe4cd2a01 100644
--- a/src/gtk/checkbox.cpp
+++ b/src/gtk/checkbox.cpp
@@ -38,41 +38,26 @@ static void gtk_checkbox_toggled_callback(GtkWidget *widget, wxCheckBox *cb)
     {
         GtkToggleButton *toggle = GTK_TOGGLE_BUTTON(widget);

-        if (cb->Is3rdStateAllowedForUser())
-        {
-            // The 3 states cycle like this when clicked:
-            // checked -> undetermined -> unchecked -> checked -> ...
-            bool active = gtk_toggle_button_get_active(toggle) != 0;
-            bool inconsistent = gtk_toggle_button_get_inconsistent(toggle) != 0;
+        // The 3 states cycle like this when clicked:
+        // checked -> undetermined -> unchecked -> checked -> ...

+        if (gtk_toggle_button_get_inconsistent(toggle))
+        {
+            // undetermined -> unchecked
             wxGtkEventsDisabler<wxCheckBox> noEvents(cb);
-
-            if (!active && !inconsistent)
+            gtk_toggle_button_set_active(toggle, false);
+            gtk_toggle_button_set_inconsistent(toggle, false);
+        }
+        else if (!gtk_toggle_button_get_active(toggle))
+        {
+            if (cb->Is3rdStateAllowedForUser())
             {
                 // checked -> undetermined
-                gtk_toggle_button_set_active(toggle, true);
                 gtk_toggle_button_set_inconsistent(toggle, true);
             }
-            else if (!active && inconsistent)
-            {
-                // undetermined -> unchecked
-                gtk_toggle_button_set_inconsistent(toggle, false);
-            }
-            else if (active && !inconsistent)
-            {
-                // unchecked -> checked
-                // nothing to do
-            }
-            else
-            {
-                wxFAIL_MSG(wxT("3state wxCheckBox in unexpected state!"));
-            }
-        }
-        else
-        {
-            // user's action unsets undetermined state:
-            gtk_toggle_button_set_inconsistent(toggle, false);
+            // else checked -> unchecked
         }
+        // else unchecked -> checked
     }

     wxCommandEvent event(wxEVT_CHECKBOX, cb->GetId());
@@ -191,37 +176,36 @@ void wxCheckBox::SetValue( bool state )
 {
     wxCHECK_RET( m_widgetCheckbox != NULL, wxT("invalid checkbox") );

-    if (state == GetValue())
-        return;
-
-    wxGtkEventsDisabler<wxCheckBox> noEvents(this);
-    gtk_toggle_button_set_active( GTK_TOGGLE_BUTTON(m_widgetCheckbox), state );
+    DoSet3StateValue(state ? wxCHK_CHECKED : wxCHK_UNCHECKED);
 }

 bool wxCheckBox::GetValue() const
 {
     wxCHECK_MSG( m_widgetCheckbox != NULL, false, wxT("invalid checkbox") );

-    return gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(m_widgetCheckbox)) != 0;
+    return DoGet3StateValue() != wxCHK_UNCHECKED;
 }

 void wxCheckBox::DoSet3StateValue(wxCheckBoxState state)
 {
-    SetValue(state != wxCHK_UNCHECKED);
-    gtk_toggle_button_set_inconsistent(GTK_TOGGLE_BUTTON(m_widgetCheckbox),
-                                       state == wxCHK_UNDETERMINED);
+    if (DoGet3StateValue() == state)
+        return;
+
+    GtkToggleButton* tglbtn = GTK_TOGGLE_BUTTON(m_widgetCheckbox);
+
+    wxGtkEventsDisabler<wxCheckBox> noEvents(this);
+    gtk_toggle_button_set_inconsistent(tglbtn, state == wxCHK_UNDETERMINED);
+    gtk_toggle_button_set_active(tglbtn, state == wxCHK_CHECKED);
 }

 wxCheckBoxState wxCheckBox::DoGet3StateValue() const
 {
-    if (gtk_toggle_button_get_inconsistent(GTK_TOGGLE_BUTTON(m_widgetCheckbox)))
-    {
+    GtkToggleButton* tglbtn = GTK_TOGGLE_BUTTON(m_widgetCheckbox);
+
+    if (gtk_toggle_button_get_inconsistent(GTK_TOGGLE_BUTTON(tglbtn)))
         return wxCHK_UNDETERMINED;
-    }
-    else
-    {
-        return GetValue() ? wxCHK_CHECKED : wxCHK_UNCHECKED;
-    }
+
+    return gtk_toggle_button_get_active(tglbtn) ? wxCHK_CHECKED : wxCHK_UNCHECKED;
 }

 void wxCheckBox::SetLabel( const wxString& label )
--
2.44.0

